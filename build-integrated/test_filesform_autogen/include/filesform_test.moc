/****************************************************************************
** Meta object code from reading C++ file 'filesform_test.cpp'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.4.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'filesform_test.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.4.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
namespace {
struct qt_meta_stringdata_TestFileTransferList_t {
    uint offsetsAndSizes[28];
    char stringdata0[21];
    char stringdata1[5];
    char stringdata2[1];
    char stringdata3[31];
    char stringdata4[27];
    char stringdata5[13];
    char stringdata6[13];
    char stringdata7[9];
    char stringdata8[10];
    char stringdata9[11];
    char stringdata10[12];
    char stringdata11[18];
    char stringdata12[18];
    char stringdata13[16];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(sizeof(qt_meta_stringdata_TestFileTransferList_t::offsetsAndSizes) + ofs), len 
Q_CONSTINIT static const qt_meta_stringdata_TestFileTransferList_t qt_meta_stringdata_TestFileTransferList = {
    {
        QT_MOC_LITERAL(0, 20),  // "TestFileTransferList"
        QT_MOC_LITERAL(21, 4),  // "init"
        QT_MOC_LITERAL(26, 0),  // ""
        QT_MOC_LITERAL(27, 30),  // "testFileTransferListConversion"
        QT_MOC_LITERAL(58, 26),  // "testEditorActionConversion"
        QT_MOC_LITERAL(85, 12),  // "testFileName"
        QT_MOC_LITERAL(98, 12),  // "testProgress"
        QT_MOC_LITERAL(111, 8),  // "testSize"
        QT_MOC_LITERAL(120, 9),  // "testSpeed"
        QT_MOC_LITERAL(130, 10),  // "testStatus"
        QT_MOC_LITERAL(141, 11),  // "testControl"
        QT_MOC_LITERAL(153, 17),  // "testAvatarIgnored"
        QT_MOC_LITERAL(171, 17),  // "testMultipleFiles"
        QT_MOC_LITERAL(189, 15)   // "testFileRemoval"
    },
    "TestFileTransferList",
    "init",
    "",
    "testFileTransferListConversion",
    "testEditorActionConversion",
    "testFileName",
    "testProgress",
    "testSize",
    "testSpeed",
    "testStatus",
    "testControl",
    "testAvatarIgnored",
    "testMultipleFiles",
    "testFileRemoval"
};
#undef QT_MOC_LITERAL
} // unnamed namespace

Q_CONSTINIT static const uint qt_meta_data_TestFileTransferList[] = {

 // content:
      10,       // revision
       0,       // classname
       0,    0, // classinfo
      12,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       1,    0,   86,    2, 0x08,    1 /* Private */,
       3,    0,   87,    2, 0x08,    2 /* Private */,
       4,    0,   88,    2, 0x08,    3 /* Private */,
       5,    0,   89,    2, 0x08,    4 /* Private */,
       6,    0,   90,    2, 0x08,    5 /* Private */,
       7,    0,   91,    2, 0x08,    6 /* Private */,
       8,    0,   92,    2, 0x08,    7 /* Private */,
       9,    0,   93,    2, 0x08,    8 /* Private */,
      10,    0,   94,    2, 0x08,    9 /* Private */,
      11,    0,   95,    2, 0x08,   10 /* Private */,
      12,    0,   96,    2, 0x08,   11 /* Private */,
      13,    0,   97,    2, 0x08,   12 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

Q_CONSTINIT const QMetaObject TestFileTransferList::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_TestFileTransferList.offsetsAndSizes,
    qt_meta_data_TestFileTransferList,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_TestFileTransferList_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<TestFileTransferList, std::true_type>,
        // method 'init'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'testFileTransferListConversion'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'testEditorActionConversion'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'testFileName'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'testProgress'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'testSize'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'testSpeed'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'testStatus'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'testControl'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'testAvatarIgnored'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'testMultipleFiles'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'testFileRemoval'
        QtPrivate::TypeAndForceComplete<void, std::false_type>
    >,
    nullptr
} };

void TestFileTransferList::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<TestFileTransferList *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->init(); break;
        case 1: _t->testFileTransferListConversion(); break;
        case 2: _t->testEditorActionConversion(); break;
        case 3: _t->testFileName(); break;
        case 4: _t->testProgress(); break;
        case 5: _t->testSize(); break;
        case 6: _t->testSpeed(); break;
        case 7: _t->testStatus(); break;
        case 8: _t->testControl(); break;
        case 9: _t->testAvatarIgnored(); break;
        case 10: _t->testMultipleFiles(); break;
        case 11: _t->testFileRemoval(); break;
        default: ;
        }
    }
    (void)_a;
}

const QMetaObject *TestFileTransferList::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestFileTransferList::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestFileTransferList.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestFileTransferList::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 12)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 12;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 12)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 12;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
